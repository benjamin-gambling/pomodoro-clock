{"version":3,"sources":["Title.js","Clock.js","index.js"],"names":["Info","props","className","onClick","toggleInfo","RemoveInfoHelp","showInfoHelp","ShowInfo","hidden","Title","state","bind","this","setState","React","Component","Clock","label","status","session","break","sessionTimer","breakTimer","count","darkmode","timerID","audio","Audio","adjustTime","startStop","clockify","resetTimer","nightmode","countdown","changeTheme","determineTheme","mode","change","newTime","parseInt","setInterval","clearInterval","timer","play","mins","Math","floor","secs","pause","currentTime","theme","document","documentElement","classList","add","Display","Timers","time","Settings","Controls","button","id","root","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f66fb01b.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Info(props) {\n  return (\n    <div className=\"info\">\n      <button className=\"close\" onClick={props.toggleInfo}>\n        <i className=\"fa fa-times\"></i>\n      </button>\n      <br />\n      <br />\n      <br />\n      <b>1 Pomodoro</b> = A time unit to maximise productivity\n      <br />\n      <br />\n      The <b>Pomodoro Technique</b> is a time management method developed by\n      Francesco Cirillo in the late 1980s. The technique uses a timer to break\n      down work into intervals, traditionally 25 minutes in length, separated by\n      short breaks. Each interval is known as a pomodoro, from the Italian word\n      for 'tomato', after the tomato-shaped kitchen timer that Cirillo used as a\n      university student.\n      <br />\n      <br />\n      <u>\n        <b>How this works:</b>\n      </u>\n      <ol>\n        <li>Decide on the task to be done.</li>\n        <li>Set the pomodoro timer (traditionally to 25 minutes).</li>\n        <li>\n          Work on the task until the timer rings, take a short break (3â€“5\n          minutes)\n        </li>\n        <li>\n          When the timer rings again, continue with the task for another\n          Pomodoro\n        </li>\n        <li>\n          After 4 Pomodoros take a longer break (twice the of the shorter\n          breaks)\n        </li>\n        <li>Then the process wil start again until the task is complete</li>\n      </ol>\n    </div>\n  );\n}\n\nfunction RemoveInfoHelp(props) {\n  if (props.showInfoHelp) {\n    return (\n      <p className=\"infoP\">\n        What am i? Press <i className=\"fa fa-info-circle\"></i> to find out!\n      </p>\n    );\n  } else return null;\n}\n\nfunction ShowInfo(props) {\n  if (props.hidden) {\n    return null;\n  } else {\n    return <Info toggleInfo={props.toggleInfo} />;\n  }\n}\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hidden: true,\n      showInfoHelp: true,\n    };\n    this.toggleInfo = this.toggleInfo.bind(this);\n  }\n\n  toggleInfo() {\n    this.state.hidden\n      ? this.setState({ hidden: false })\n      : this.setState({ hidden: true });\n    this.setState({ showInfoHelp: false });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>\n          POMODORO CLOCK{\" \"}\n          <button onClick={this.toggleInfo}>\n            <i className=\"fa fa-info-circle\"></i>\n          </button>\n        </h1>\n        <RemoveInfoHelp showInfoHelp={this.state.showInfoHelp} />\n        <ShowInfo hidden={this.state.hidden} toggleInfo={this.toggleInfo} />\n      </div>\n    );\n  }\n}\n\nexport default Title;\n","import React from \"react\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: \"session\",\n      status: \"stopped\",\n      session: 25,\n      break: 5,\n      sessionTimer: 1500,\n      breakTimer: 300,\n      count: 1,\n      darkmode: false,\n    };\n    this.timerID = null;\n    this.audio = new Audio(\"https://onlineclock.net/audio/options/default.mp3\");\n    this.adjustTime = this.adjustTime.bind(this);\n    this.startStop = this.startStop.bind(this);\n    this.clockify = this.clockify.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n    this.nightmode = this.nightmode.bind(this);\n    //Not Passed Down\n    this.countdown = this.countdown.bind(this);\n    this.changeTheme = this.changeTheme.bind(this);\n    this.determineTheme = this.determineTheme.bind(this);\n  }\n\n  adjustTime(mode, change) {\n    let newTime = this.state[mode] + parseInt(change);\n    if (newTime > 0 && newTime < 61) {\n      this.setState({\n        [mode]: newTime,\n        [`${mode}Timer`]: this.state[`${mode}Timer`] + 60 * change,\n      });\n    }\n  }\n\n  startStop() {\n    if (this.state.status === \"stopped\") {\n      this.timerID = setInterval(() => {\n        this.countdown();\n      }, 1000);\n      this.setState({ status: \"playing\" }, this.determineTheme);\n    } else {\n      clearInterval(this.timerID);\n      this.setState({ status: \"stopped\" }, this.determineTheme);\n    }\n  }\n\n  countdown() {\n    let mode = this.state.label;\n    let timer = this.state[`${mode}Timer`] - 1;\n    this.setState({ [`${mode}Timer`]: timer });\n    if (timer === 0) {\n      this.audio.play();\n    }\n    if (timer < 0) {\n      this.state.label === \"session\"\n        ? this.setState(\n            {\n              label: \"break\",\n              [`${mode}Timer`]: this.state[mode] * 60,\n            },\n            this.determineTheme\n          )\n        : this.setState(\n            {\n              label: \"session\",\n              [`${mode}Timer`]: this.state[mode] * 60,\n              count: this.state.count + 1,\n              breakTimer:\n                this.state.count % 4 === 0\n                  ? this.state.break * 120\n                  : this.state.break * 60,\n            },\n            this.determineTheme\n          );\n    }\n  }\n\n  clockify(mode) {\n    let mins = Math.floor(this.state[`${mode}Timer`] / 60);\n    let secs = this.state[`${mode}Timer`] - mins * 60;\n    secs = secs < 10 ? \"0\" + secs : secs;\n    mins = mins < 10 ? \"0\" + mins : mins;\n    return mins + \":\" + secs;\n  }\n\n  resetTimer() {\n    this.setState({\n      label: \"session\",\n      status: \"stopped\",\n      session: 25,\n      break: 5,\n      sessionTimer: 1500,\n      breakTimer: 300,\n      count: 0,\n    });\n    clearInterval(this.timerID);\n    this.audio.pause();\n    this.audio.currentTime = 0;\n  }\n\n  determineTheme() {\n    let theme = \"\";\n    this.state.status === \"stopped\"\n      ? (theme = \"paused\")\n      : this.state.label === \"session\"\n      ? (theme = \"work\")\n      : (theme = \"break\");\n    if (this.state.darkmode === true) theme = `dark${theme}`;\n    this.changeTheme(theme);\n  }\n\n  changeTheme(theme) {\n    document.documentElement.className = \"\";\n    document.documentElement.classList.add(`theme-${theme}`);\n  }\n\n  nightmode() {\n    this.setState(\n      {\n        darkmode: !this.state.darkmode,\n      },\n      this.determineTheme\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <Display label={this.state.label} clockify={this.clockify} />\n        <Settings\n          label={this.state.label}\n          session={this.state.session}\n          break={this.state.break}\n          adjustTime={this.adjustTime}\n        />\n        <Controls\n          status={this.state.status}\n          darkmode={this.state.darkmode}\n          startStop={this.startStop}\n          resetTimer={this.resetTimer}\n          nightmode={this.nightmode}\n        />\n      </div>\n    );\n  }\n}\n\nclass Display extends React.Component {\n  render() {\n    let mode = this.props.label;\n    return (\n      <div className=\"display\">\n        <h3 className=\"timer-label\">{mode}</h3>\n        <div className=\"countdown\">{this.props.clockify(mode)}</div>\n      </div>\n    );\n  }\n}\n\nconst Timers = (props) => {\n  return (\n    <div>\n      <h3>{props.mode}</h3>\n      <div className=\"time-adjust\">\n        <button onClick={() => props.adjustTime(props.mode, \"-1\")}>\n          <i className=\"fa fa-minus\"></i>\n        </button>\n        <h3>{props.time}</h3>\n        <button onClick={() => props.adjustTime(props.mode, \"1\")}>\n          <i className=\"fa fa-plus\"></i>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <div className=\"settings\">\n        <Timers\n          mode=\"session\"\n          time={this.props.session}\n          adjustTime={this.props.adjustTime}\n        />\n        <Timers\n          mode=\"break\"\n          time={this.props.break}\n          adjustTime={this.props.adjustTime}\n        />\n      </div>\n    );\n  }\n}\n\nclass Controls extends React.Component {\n  render() {\n    const button =\n      this.props.status === \"stopped\" ? (\n        <i className=\"fa fa-play\" />\n      ) : (\n        <i className=\"fa fa-pause\" />\n      );\n    return (\n      <div className=\"controls\">\n        <button onClick={() => this.props.startStop()}>{button}</button>\n        <button id=\"refresh\" onClick={() => this.props.startStop()}>\n          <i className=\"fa fa-refresh\" />\n        </button>\n        <button id=\"nightmode\" onClick={() => this.props.nightmode()}>\n          {this.props.darkmode ? (\n            <i className=\"fa fa-sun-o\"></i>\n          ) : (\n            <i className=\"fa fa-moon-o\"></i>\n          )}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport Title from \"./Title\";\nimport Clock from \"./Clock\";\n\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <Title />\n    <Clock />\n  </React.StrictMode>,\n  root\n);\n"],"sourceRoot":""}